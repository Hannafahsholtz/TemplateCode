# erin baggott carter# oct 28, 2016# basic python########################## commenting things out ########################### anything preceded by '#' is not run as code. otherwise text throws an error!######################## integers and floats ######################### numeric types# there are 2 important ones: ints and floats.# ints are whole numeric values; floats are floating point numbers, or values with decimals. # this sounds like a trivial difference, but it's not.x = 5y = 3x / yfloat(x)/ytype(3)type(3.0)# basic mathprint 5 + 2print 5 - 2print 5 * 2print 5 / float(2)   #remember: integer division!print 5 % 2          #mod operator, returns the remainder of a division operationprint 5**2           #expontiation############ strings ############a = "hello world!"print type(a)print aprint a.upper()print a.lower()print a.title()# concatenationb = a + " and goodbye world."b# replacementsc = b.replace('and goodbye world.','i am glad to meet you.')# note on ' and "c = b.replace('and goodbye world.','i'm glad to meet you.') # error!c = b.replace('and goodbye world.',"i'm glad to meet you.") ############# indexing ############## python starts counting at 0, not 1alen(a)a[0]a[4]a[0:4] # doesn't include 'o'!########## lists ########### list are incredibly powerful and important in python.l = [1,2,3]l[0]l[1]l[2]l[3] # there is no [3]!l = b.split()ll.remove('and')ll.append('hooray!')n = ['erin','carter']lrange(0,10) # the list of numbers between 0 and 10, not including 10############## for loops ##############for x in range(0,10):    y = x*2 - 17    print yfor item in l:	print item + '!'        # add an if statementfor item in l:	if '!' in item:		print item # things with counters, while statementsi = 0while i < 10:	print 'i is ',str(i), ', still less than 10!'	i += 1# enumeratingfor i,item in enumerate(l):    print i, item    # challenge: make a list of months. then write a for loop to print# only the winter months, and add them to a new holder list.months = ['jan','feb','mar','apr','may','jun','jul','aug','sep','oct','nov','dec']winter = ['dec','jan','feb']mymonths = []for month in months:    if month in winter:        print month, 'is in winter!'        mymonths.append(month)    if month not in winter:        print month, 'is not in winter =('mymonths # challenge: do the same for people in the training session, and # whether they are freshman, sophomores, juniors, or seniors.    ######################## reading from a file ########################import os # lets you navigate to directoriesmydir = '/Users/erinbaggott/Dropbox/Python Teaching/' # my local directorymydir = '/Users/erinbaggott/GitHub/TemplateCode/' # if you've installed GitHub Desktopf = open(mydir+'test_in.txt','r').read() # this file is on githubprint ff# challenge: split abstract into sentences. how many sentences are there?# inspect the last sentence and the penultimate sentence.l = f.split('.')len(l)l[9]l[8]# let's look at each of these sentencesfor s in l:    print s  # challenge: clean up the sentences. remove formatting, punctuation. # lowercase them.clean = [] # clean, well formatted sentences for s in l:    s = s.replace('\t','')    s = s.strip()    s = s.lower()    print s    clean.append(s)    # challenge: save these sentences in a file, capitalized.# for fun, let's add periods back to the end of sentences.###################### writing to a file ######################f = open(mydir+'test_out.txt','w')f.write('I am writing out my first sentence.')f.close()f = open(mydir+'test_out.txt','a')                # if you used 'w' again, you would over write!f.write(' I am going to append another sentence to my file.')f.close()